from neopixel import Color
from time import sleep
from scene import Scene

RED = Color(32, 0, 0)
BROWN = Color(28, 16, 0)
SKIN = Color(48, 32, 0)
NONE = Color(0, 0, 0)
STOP = False
POLL = None

FRAME1 = [
    [NONE, NONE, NONE,  NONE,  RED,   RED,   RED,   RED,   RED,   NONE,  NONE,  NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  RED,   RED,   RED,   RED,   RED,   RED,   RED,   RED,   RED,   NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, SKIN,  SKIN,  BROWN, SKIN,  NONE,  NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  BROWN, SKIN,  SKIN,  SKIN,  BROWN, SKIN,  SKIN,  SKIN,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  BROWN, BROWN, SKIN,  SKIN,  SKIN,  BROWN, SKIN,  SKIN,  SKIN,  NONE,  NONE, NONE],
    [NONE, NONE, BROWN, BROWN, SKIN,  SKIN,  SKIN,  SKIN,  BROWN, BROWN, BROWN, BROWN, NONE,  NONE,  NONE, NONE],

    [NONE, NONE, NONE,  NONE,  SKIN,  BROWN, BROWN, SKIN,  SKIN,  SKIN,  SKIN,  NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  NONE,  BROWN, BROWN, BROWN, BROWN, RED,   BROWN, RED,   NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, BROWN, RED,   SKIN,  RED,   SKIN,  NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, BROWN, RED,   RED,   RED,   RED,   NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  SKIN,  BROWN, RED,   RED,   RED,   RED,   RED,   NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, SKIN,  SKIN,  SKIN,  RED,   RED,   RED,   RED,   RED,   RED,   NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  SKIN,  SKIN,  RED,   RED,   RED,   RED,   RED,   BROWN, BROWN, BROWN, BROWN, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  BROWN, BROWN, RED,   RED,   NONE,  NONE,  BROWN, BROWN, BROWN, BROWN, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, BROWN, NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, BROWN, BROWN, NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE, NONE],
]

FRAME2 = [
    [NONE, NONE, NONE,  NONE,  RED,   RED,   RED,   RED,   RED,   NONE,  NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  RED,   RED,   RED,   RED,   RED,   RED,   RED,   RED,   RED,   NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, SKIN,  SKIN,  BROWN, SKIN,  NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  BROWN, SKIN,  SKIN,  SKIN,  BROWN, SKIN,  SKIN,  SKIN,  NONE, NONE, NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  BROWN, BROWN, SKIN,  SKIN,  SKIN,  BROWN, SKIN,  SKIN,  SKIN, NONE, NONE, NONE],
    [NONE, NONE, BROWN, BROWN, SKIN,  SKIN,  SKIN,  SKIN,  BROWN, BROWN, BROWN, BROWN, NONE, NONE, NONE, NONE],

    [NONE, NONE, NONE,  NONE,  SKIN,  RED,   RED,   RED,   SKIN,  SKIN,  SKIN,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   BROWN, BROWN, RED,   RED,   BROWN, NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   BROWN, BROWN, RED,   SKIN,  RED,   BROWN, NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   BROWN, BROWN, BROWN, SKIN,  SKIN,  RED,   NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   RED,   BROWN, BROWN, SKIN,  SKIN,  RED,   NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   RED,   RED,   RED,   RED,   BROWN, BROWN, NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   RED,   RED,   NONE,  BROWN, BROWN, BROWN, NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  BROWN, BROWN, BROWN, NONE,  BROWN, BROWN, BROWN, BROWN, NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  BROWN, BROWN, BROWN, NONE,  NONE,  NONE,  NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  BROWN, BROWN, BROWN, BROWN, NONE,  NONE,  NONE,  NONE,  NONE, NONE, NONE, NONE],
]

FRAME3 = [
    [NONE, NONE, NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   RED,   RED,   RED,   RED,   NONE,  NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  RED,   RED,   RED,   RED,   RED,   RED,   RED,   RED,   RED,   NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, SKIN,  SKIN,  BROWN, SKIN,  NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  BROWN, SKIN,  SKIN,  SKIN,  BROWN, SKIN,  SKIN,  SKIN,  NONE, NONE, NONE, NONE],
    [NONE, NONE, BROWN, SKIN,  BROWN, BROWN, SKIN,  SKIN,  SKIN,  BROWN, SKIN,  SKIN,  SKIN, NONE, NONE, NONE],
    [NONE, NONE, BROWN, BROWN, SKIN,  SKIN,  SKIN,  SKIN,  BROWN, BROWN, BROWN, BROWN, NONE, NONE, NONE, NONE],

    [NONE, NONE, NONE,  NONE,  SKIN,  RED,   RED,   RED,   SKIN,  SKIN,  SKIN,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   BROWN, BROWN, RED,   RED,   RED,   NONE,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   BROWN, BROWN, BROWN, RED,   RED,   SKIN,  NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   RED,   BROWN, BROWN, BROWN, BROWN, SKIN,  SKIN,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  NONE,  RED,   RED,   RED,   BROWN, BROWN, BROWN, SKIN,  SKIN,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, RED,   RED,   RED,   RED,   RED,   NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, BROWN, RED,   RED,   BROWN, BROWN, BROWN, NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, BROWN, NONE,  NONE,  NONE,  BROWN, BROWN, BROWN, NONE,  NONE, NONE, NONE, NONE],
    [NONE, NONE, NONE,  BROWN, NONE,  NONE,  NONE,  NONE,  BROWN, BROWN, BROWN, BROWN, NONE, NONE, NONE, NONE],
]


class Mario(Scene):
    def show(self, frame):
        for x in range(16):
            for y in range(16):
                self._display.set_pixel(x, y, frame[y][x])
        self._display.draw()

    def iter(self):
        print("mario iter")
        self.show(FRAME1)
        sleep(0.1)
        self.show(FRAME2)
        sleep(0.1)
        self.show(FRAME3)
        sleep(0.1)
